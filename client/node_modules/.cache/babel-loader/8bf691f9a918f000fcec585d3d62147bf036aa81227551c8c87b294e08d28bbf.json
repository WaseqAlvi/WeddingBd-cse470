{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_REQUEST } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    // dispatch({\n    //   type: CART_CLEAR_ITEMS,\n    //   payload: data,\n    // })\n    // localStorage.removeItem('cartItems')\n  } catch (error) {\n    // const message =\n    //   error.response && error.response.data.message\n    //     ? error.response.data.message\n    //     : error.message\n    // if (message === 'Not authorized, token failed') {\n    //   dispatch(logout())\n    // }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    // const message =\n    //   error.response && error.response.data.message\n    //     ? error.response.data.message\n    //     : error.message\n    // if (message === 'Not authorized, token failed') {\n    //   dispatch(logout())\n    // }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    // const message =\n    //   error.response && error.response.data.message\n    //     ? error.response.data.message\n    //     : error.message\n    // if (message === 'Not authorized, token failed') {\n    //   dispatch(logout())\n    // }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    // const message =\n    //   error.response && error.response.data.message\n    //     ? error.response.data.message\n    //     : error.message\n    // // if (message === 'Not authorized, token failed') {\n    // //   dispatch(logout())\n\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_REQUEST","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders"],"sources":["H:/470 Project/client/src/actions/orderActions.js"],"sourcesContent":["import axios from 'axios'\r\nimport {\r\n ORDER_CREATE_REQUEST,\r\n ORDER_CREATE_SUCCESS,\r\n ORDER_CREATE_FAIL,\r\n ORDER_DETAILS_SUCCESS,\r\n ORDER_DETAILS_REQUEST,\r\n ORDER_DETAILS_FAIL,\r\n ORDER_PAY_REQUEST,\r\n ORDER_PAY_SUCCESS,\r\n ORDER_PAY_FAIL,\r\n ORDER_LIST_MY_FAIL,\r\n ORDER_LIST_MY_SUCCESS,\r\n ORDER_LIST_MY_REQUEST\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n try {\r\n   dispatch({\r\n     type: ORDER_CREATE_REQUEST,\r\n   })\r\n\r\n   const {\r\n     userLogin: { userInfo },\r\n   } = getState()\r\n\r\n   const config = {\r\n     headers: {\r\n       'Content-Type': 'application/json',\r\n       Authorization: `Bearer ${userInfo.token}`,\r\n     },\r\n   }\r\n\r\n   const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n   dispatch({\r\n     type: ORDER_CREATE_SUCCESS,\r\n     payload: data,\r\n   })\r\n   // dispatch({\r\n   //   type: CART_CLEAR_ITEMS,\r\n   //   payload: data,\r\n   // })\r\n   // localStorage.removeItem('cartItems')\r\n } catch (error) {\r\n   // const message =\r\n   //   error.response && error.response.data.message\r\n   //     ? error.response.data.message\r\n   //     : error.message\r\n   // if (message === 'Not authorized, token failed') {\r\n   //   dispatch(logout())\r\n   // }\r\n   dispatch({\r\n     type: ORDER_DETAILS_FAIL,\r\n     payload: \r\n       error.response && error.response.data.message\r\n       ? error.response.data.message\r\n       : error.message\r\n   })\r\n }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    }) \r\n  } catch (error) {\r\n    // const message =\r\n    //   error.response && error.response.data.message\r\n    //     ? error.response.data.message\r\n    //     : error.message\r\n    // if (message === 'Not authorized, token failed') {\r\n    //   dispatch(logout())\r\n    // }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message \r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    // const message =\r\n    //   error.response && error.response.data.message\r\n    //     ? error.response.data.message\r\n    //     : error.message\r\n    // if (message === 'Not authorized, token failed') {\r\n    //   dispatch(logout())\r\n    // }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: \r\n            error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    // const message =\r\n    //   error.response && error.response.data.message\r\n    //     ? error.response.data.message\r\n    //     : error.message\r\n    // // if (message === 'Not authorized, token failed') {\r\n    // //   dispatch(logout())\r\n    \r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: \r\n            error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    })\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}