{"ast":null,"code":"import { combineReducers, applyMiddleware } from \"redux\";\nimport { legacy_createStore as createStore } from 'redux';\nimport { createApi } from '@reduxjs/toolkit/query/react';\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer } from \"./reducers/productReducer\";\nconst reducer = combineReducers({\n  productList: productListReducer\n});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["combineReducers","applyMiddleware","legacy_createStore","createStore","createApi","thunk","composeWithDevTools","productListReducer","reducer","productList","initialState","middleware","store"],"sources":["H:/470 Project/client/src/store.js"],"sourcesContent":["import { combineReducers, applyMiddleware } from \"redux\";\r\nimport {legacy_createStore as createStore} from 'redux'\r\n\r\nimport { createApi } from '@reduxjs/toolkit/query/react'\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { productListReducer } from \"./reducers/productReducer\";\r\n\r\nconst reducer = combineReducers({\r\n\r\n    productList:productListReducer\r\n});\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxD,SAAQC,kBAAkB,IAAIC,WAAW,QAAO,OAAO;AAEvD,SAASC,SAAS,QAAQ,8BAA8B;AACxD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,kBAAkB,QAAQ,2BAA2B;AAE9D,MAAMC,OAAO,GAAGR,eAAe,CAAC;EAE5BS,WAAW,EAACF;AAChB,CAAC,CAAC;AAEF,MAAMG,YAAY,GAAG,CAAC,CAAC;AACvB,MAAMC,UAAU,GAAG,CAACN,KAAK,CAAC;AAC1B,MAAMO,KAAK,GAAGT,WAAW,CACvBK,OAAO,EACPE,YAAY,EACZJ,mBAAmB,CAACL,eAAe,CAAC,GAAGU,UAAU,CAAC,CACpD,CAAC;AACD,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}